<%- include("../../views/partials/user/userHeader") %>

    <style>
        .shopping__cart__table table {
            border-collapse: collapse;
            /* Ensures that borders don't double up */
            border-spacing: 0;
            /* Removes space between cells */
        }

        .shopping__cart__table table th,
        .shopping__cart__table table td {
            border: none;
            /* Removes borders from table headers and cells */
        }

        .shopping__cart__table table tr {
            border-bottom: none;
            /* Removes borders between rows */
        }

        .shopping__cart__table {
            box-shadow: none;
            /* Removes any box-shadow if applied */
            border: none;
            /* Removes border from the entire table container */
        }

        /* Style for cart__close button */
        .cart__close {
            text-align: center;
            vertical-align: middle;
        }

        /* Style for the remove-item button */
        .cart__close .remove-item {
            background-color: transparent;
            /* Transparent background for a clean look */
            border: none;
            /* Remove border */
            cursor: pointer;
            /* Pointer cursor to indicate clickability */
            padding: 5px;
            /* Add some padding for better click area */
            border-radius: 50%;
            /* Circle shape */
            transition: background-color 0.3s ease, color 0.3s ease;
            /* Smooth transition effects */
        }

        /* Default icon style */
        .cart__close .remove-item i {
            font-size: 16px;
            /* Adjust size as needed */
            color: #ff4d4d;
            /* Red color for remove icon */
            transition: transform 0.3s ease;
            /* Smooth scaling effect */
        }

        /* Hover effect for button */
        .cart__close .remove-item:hover {
            background-color: #ff4d4d;
            /* Red background on hover */
            color: white;
            /* White color for icon on hover */
        }

        /* Hover effect for the icon */
        .cart__close .remove-item:hover i {
            transform: scale(1.2);
            /* Slightly enlarge the icon on hover */
        }

        /* Container for quantity buttons */
        .pro-qty-1 {
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
        }

        /* Style for the input field */
        .pro-qty-1 input {
            width: 40px;
            height: 30px;
            text-align: center;

            font-size: 16px;
            margin: 0 10px;
            background-color: #ffffff00;
        }

        /* Button styling */
        .qty-btn {
            width: 25px;
            height: 25px;
            background-color: #000000;
            color: white;
            border: none;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        /* Hover effect for buttons */
        .qty-btn:hover {
            background-color: #9b0606;
        }

        /* Disabled button styling */
        .qty-btn.disabled {
            background-color: #d6d6d6;
            cursor: not-allowed;
        }

        /* Styling for the increment and decrement buttons */
        .qty-btn.decrement {
            margin-right: 10px;
        }

        .qty-btn.increment {
            margin-left: 2px;
        }

        /* Optional: Add some space between buttons */
        .qty-btn i {
            font-size: 16px;
        }

        /* Optional: Add some focus/active styles */
        .qty-btn:active {
            background-color: #520303;
        }

        .custom-alert {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 16px 24px;
            border-radius: 50px;
            background-color: white;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.35);
            z-index: 1000;
            display: flex;
            align-items: center;
            gap: 12px;
            transform: translateX(150%);
            transition: transform 0.3s ease-in-out;
            max-width: 350px;

        }

        .custom-alert.show {
            transform: translateX(0);
        }


        .alert-icon {
            font-size: 20px;
        }

        .alert-icon.success {
            color: #4CAF50;
        }

        .alert-icon.error {
            color: #f44336;
        }

        .alert-message {
            color: #333;
            font-size: 14px;
            margin: 0;
        }

        .alert-close {
            background: transparent;
            border: none;
            color: #999;
            cursor: pointer;
            font-size: 18px;
            padding: 0;
            margin-left: auto;

        }

        .alert-close:hover {
            color: #666;
        }
    </style>

    <!-- Breadcrumb Section Begin -->
    <section class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__text">
                        <h4>Shopping Cart</h4>
                        <div class="breadcrumb__links">
                            <a href="/">Home</a>
                            <a href="/shop">Shop</a>
                            <span>Shopping Cart</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Breadcrumb Section End -->

    <!-- Shopping Cart Section Begin -->
    <section class="shopping-cart spad">
        <div class="container">
            <div class="row">
                <div class="col-lg-8">
                    <div class="shopping__cart__table">
                        <% if (cart && cart.items && cart.items.length> 0) { %>
                            <table>
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Quantity</th>
                                        <th>Total</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% cart.items.forEach(item=> { %>
                                        <tr data-product-id="<%= item.productId %>">
                                            <td class="product__cart__item">
                                                <div class="product__cart__item__pic">
                                                    <img src="/uploads/re-image/<%= item.product.productImage[0] %>"
                                                        alt="<%= item.product.productName %>">
                                                </div>
                                                <div class="product__cart__item__text">
                                                    <h6>
                                                        <%= item.product.productName %>
                                                    </h6>
                                                    <h5>₹<%= item.price %>
                                                    </h5>
                                                </div>
                                            </td>
                                            <td class="quantity__item" data-product-id="<%= item.productId %>">
                                                <div class="quantity">
                                                    <div class="pro-qty-1">
                                                        <button class="qty-btn dec" data-action="decrement">
                                                            <i class="fa fa-angle-left"></i>
                                                        </button>
                                                        <input type="text" value="<%= item.quantity %>" readonly>
                                                        <button class="qty-btn increment" data-action="increment">
                                                            <i class="fa fa-angle-right"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="item-total-price">₹<%= item.totalPrice %>
                                            </td>
                                            <td class="cart__close">
                                                <button class="remove-item" data-product-id="<%= item.productId %>">
                                                    <i class="fa fa-close"></i>
                                                </button>
                                            </td>
                                        </tr>
                                        <% }); %>
                                </tbody>
                            </table>
                            <% } else { %>
                                <div class="empty-cart-message">
                                    <h3>Your cart is empty</h3>
                                    <p>Browse our products and add items to your cart!</p>
                                    <div class="continue__btn">
                                        <a href="/shop">Continue Shopping</a>
                                    </div>
                                </div>
                                <% } %>
                    </div>
                    <% if (cart && cart.items && cart.items.length> 0) { %>
                        <div class="row">
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                <div class="continue__btn">
                                    <a href="/shop">Continue Shopping</a>
                                </div>
                            </div>

                        </div>
                        <% } %>
                </div>
                <% if (cart && cart.items && cart.items.length> 0) { %>
                    <div class="col-lg-4">
                        <div class="cart__total">
                            <h6>Cart total</h6>
                            <ul>
                                <li>Subtotal <span>₹<%= cart.totalPrice %></span></li>
                                <% if (cart.discount) { %>
                                    <li>Discount <span>-₹<%= cart.discount %></span></li>
                                    <% } %>
                                        <li>Total <span>₹<%= cart.totalPrice - (cart.discount || 0) %></span></li>
                            </ul>
                            <a href="/checkOut" class="primary-btn">Proceed to checkout</a>
                        </div>
                    </div>
                    <% } %>
            </div>
        </div>
    </section>

    <div id="alertContainer"></div>



    <!-- Shopping Cart Section End -->


    <script>

        function showCustomAlert(message, type = 'success') {
            const alertContainer = document.getElementById('alertContainer');

            // Create alert element
            const alertEl = document.createElement('div');
            alertEl.className = `custom-alert ${type}`;

            // Create alert content
            alertEl.innerHTML = `
                <i class="fa ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'} alert-icon ${type}"></i>
                <p class="alert-message">${message}</p>
                <button class="alert-close">×</button>
            `;

            // Add to container
            alertContainer.appendChild(alertEl);

            // Trigger animation
            setTimeout(() => alertEl.classList.add('show'), 10);

            // Add close button functionality
            const closeBtn = alertEl.querySelector('.alert-close');
            closeBtn.addEventListener('click', () => {
                alertEl.classList.remove('show');
                setTimeout(() => alertEl.remove(), 300);
            });

            // Auto remove after 3 seconds
            setTimeout(() => {
                if (alertEl.parentNode) {
                    alertEl.classList.remove('show');
                    setTimeout(() => alertEl.remove(), 300);
                }
            }, 3000);
        }

        document.addEventListener('DOMContentLoaded', () => {
            const updateCartQuantity = (productId, action) => {
                fetch('/updateQuantity', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId, action }),
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log('Server response:', data);

                        if (data.success) {
                            // Update quantity input
                            const quantityInput = document.querySelector(`.quantity__item[data-product-id="${productId}"] input`);
                            if (quantityInput) {
                                quantityInput.value = data.updatedQuantity;
                            }

                            // Update product total price
                            const totalPriceElement = document.querySelector(`tr[data-product-id="${productId}"] .item-total-price`);
                            if (totalPriceElement) {
                                totalPriceElement.textContent = `₹${parseFloat(data.updatedTotalPrice).toFixed(2)}`;
                            }

                            // Update cart subtotal
                            const subtotalSpan = document.querySelector('.cart__total ul li:first-child span');
                            if (subtotalSpan) {
                                subtotalSpan.textContent = `₹${parseFloat(data.cartTotalPrice).toFixed(2)}`;
                            }

                            // Calculate and update final total
                            const cartTotal = parseFloat(data.cartTotalPrice);
                            const cartDiscount = data.cartDiscount ? parseFloat(data.cartDiscount) : 0;
                            const finalTotal = cartTotal - cartDiscount;

                            // Update discount if exists
                            if (cartDiscount > 0) {
                                const discountSpan = document.querySelector('.cart__total ul li:nth-child(2) span');
                                if (discountSpan) {
                                    discountSpan.textContent = `-₹${cartDiscount.toFixed(2)}`;
                                }
                            }

                            // Update final total
                            const finalTotalSpan = document.querySelector('.cart__total ul li:last-child span');
                            if (finalTotalSpan) {
                                finalTotalSpan.textContent = `₹${finalTotal.toFixed(2)}`;
                            }

                            showCustomAlert('Cart updated successfully', 'success');
                        } else {
                            showCustomAlert(data.message || 'Failed to update cart.', 'error');
                        }
                    })
                    .catch(error => {
                        console.error('Error updating cart:', error);
                        showCustomAlert('An error occurred while updating the cart.', 'error');
                    });
            };

            // Event listener for quantity buttons
            document.querySelectorAll('.qty-btn').forEach(button => {
                button.addEventListener('click', (event) => {
                    event.preventDefault();
                    event.stopPropagation();

                    // Find the closest button if clicked on the icon
                    const btn = event.target.closest('.qty-btn');
                    if (!btn) return;

                    // Get the quantity item container
                    const quantityItem = btn.closest('.quantity__item');
                    if (!quantityItem) return;

                    const productId = quantityItem.dataset.productId;
                    const action = btn.classList.contains('increment') ? 'increment' : 'decrement';

                    updateCartQuantity(productId, action);
                });
            });



            //removeItemFromCart


            const removeItem = (productId) => {
                fetch('/removeItemFromCart', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId })
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log('Server response:', data);

                        if (data.success) {
                            // Remove the corresponding row from the cart table
                            const itemRow = document.querySelector(`tr[data-product-id="${productId}"]`);
                            if (itemRow) {
                                itemRow.remove();
                            }

                            // Update cart subtotal
                            const subtotalSpan = document.querySelector('.cart__total ul li:first-child span');
                            if (subtotalSpan) {
                                subtotalSpan.textContent = `₹${parseFloat(data.cartTotalPrice).toFixed(2)}`;
                            }

                            // Update discount
                            const discountSpan = document.querySelector('.cart__total ul li:nth-child(2) span');
                            if (discountSpan) {
                                discountSpan.textContent = `-₹${data.cartDiscount.toFixed(2)}`;
                            }

                            // Update final total
                            const finalTotalSpan = document.querySelector('.cart__total ul li:last-child span');
                            if (finalTotalSpan) {
                                finalTotalSpan.textContent = `₹${(data.cartTotalPrice - data.cartDiscount).toFixed(2)}`;
                            }

                            showCustomAlert('Item removed from cart successfully', 'success');
                        } else {
                            showCustomAlert(data.message || 'Failed to remove item from cart.', 'error');
                        }
                    })
                    .catch(error => {
                        console.error('Error removing item from cart:', error);
                        showCustomAlert('An error occurred while removing the item from the cart.', 'error');
                    });
            };

            // Event listener for remove-item buttons
            document.querySelectorAll('.remove-item').forEach(button => {
                button.addEventListener('click', (event) => {
                    event.preventDefault();
                    event.stopPropagation();

                    const productId = button.dataset.productId;
                    removeItem(productId);
                });
            });
        });


    </script>


    <%- include("../../views/partials/user/userFooter") %>