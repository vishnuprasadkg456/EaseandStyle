<%- include("../../views/partials/user/userHeader") %>

<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>

    <style>
        .order-details {
            padding: 80px 0;
        }

        .order-header {
            margin-bottom: 40px;
        }

        .order-info {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 30px;
        }

        .order-info__item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }

        .order-info__item:last-child {
            border-bottom: none;
        }

        .order-status {
            padding: 6px 12px;
            border-radius: 50px;
            font-size: 14px;
            font-weight: 600;
        }

        .status-pending {
            background: #fff3cd;
            color: #856404;
        }

        .status-processing {
            background: #cce5ff;
            color: #004085;
        }

        .status-shipped {
            background: #d4edda;
            color: #155724;
        }

        .status-delivered {
            background: #c3e6cb;
            color: #1e7e34;
        }

        .status-cancelled {
            background: #f8d7da;
            color: #721c24;
        }

        .product-card {
            background: #fff;
            border: 1px solid #eee;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .product-card__header {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
        }

        .product-card__image {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 4px;
        }

        .product-card__details {
            flex-grow: 1;
        }

        .product-card__title {
            font-size: 18px;
            margin-bottom: 10px;
        }

        .product-card__price {
            font-weight: 600;
            color: #111111;
        }

        .cancel-btn {
            background-color: #ff4d4d;
            color: white;
            border: none;
            padding: 4px 8px;
            margin-bottom: 30px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .cancel-btn:hover {
            background-color: #ff3333;
        }

        .cancel-btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .tracking-timeline {
            margin: 40px 0;
            position: relative;
            padding-left: 30px;
        }

        .timeline-item {
            position: relative;
            padding-bottom: 30px;
        }

        .timeline-item::before {
            content: '';
            position: absolute;
            left: -30px;
            top: 0;
            width: 2px;
            height: 100%;
            background-color: #e5e5e5;
        }

        .timeline-item::after {
            content: '';
            position: absolute;
            left: -34px;
            top: 0;
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background-color: #e5e5e5;
        }

        .timeline-item.active::after {
            background-color: #4CAF50;
        }

        .timeline-date {
            font-size: 14px;
            color: #666;
        }

        .timeline-status {
            font-weight: 600;
            margin: 5px 0;
        }

        #alertContainer {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
            max-width: 350px;
        }

        .custom-alert {
            opacity: 0;
            transform: translateX(100%);
            transition: all 0.3s ease;
            margin-bottom: 10px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .custom-alert.show {
            opacity: 1;
            transform: translateX(0);
        }

        .custom-alert .alert-content {
            display: flex;
            align-items: center;
            padding: 15px;
            background-color: #fff;
            border-left: 5px solid;
        }

        .custom-alert .alert-icon {
            margin-right: 15px;
            font-weight: bold;
            font-size: 20px;
        }

        .custom-alert .alert-message {
            flex-grow: 1;
            font-size: 14px;
        }

        .custom-alert .alert-close {
            background: none;
            border: none;
            font-size: 20px;
            cursor: pointer;
            color: #666;
        }

        .custom-alert.alert-success {
            border-left-color: #28a745;
        }

        .custom-alert.alert-error {
            border-left-color: #dc3545;
        }

        .custom-alert.alert-warning {
            border-left-color: #ffc107;
        }

        .custom-confirmation-modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1100;
        }

        .confirmation-content {
            background-color: white;
            padding: 30px;
            border-radius: 8px;
            text-align: center;
            max-width: 400px;
            width: 90%;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .confirmation-content h4 {
            margin-bottom: 15px;
            color: #333;
        }

        .confirmation-content p {
            margin-bottom: 20px;
            color: #666;
        }

        .confirmation-actions {
            display: flex;
            justify-content: center;
            gap: 15px;
        }

        .btn-cancel-confirm,
        .btn-cancel-dismiss {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .btn-cancel-confirm {
            background-color: #dc3545;
            color: white;
        }

        .btn-cancel-confirm:hover {
            background-color: #c82333;
        }

        .btn-cancel-dismiss {
            background-color: #6c757d;
            color: white;
        }

        .btn-cancel-dismiss:hover {
            background-color: #545b62;
        }

        .download-invoice {
            margin-top: 10px;

        }

        .btn,
        .button {
            display: inline-block;
            border: 1px solid transparent;
            font-size: 12px;
            font-weight: 700;
            padding: 6px 10px;
            border-radius: 0px;
            color: #fff;
            border: 1px solid #a75c5c;
            background-color: #903131;
            cursor: pointer;
            -webkit-transition: all 300ms linear 0s;
            transition: all 300ms linear 0s;
            letter-spacing: 0.5px;
        }

        .btn,
        .button:hover {
            background-color: #2a2a2a;
        }

        .cancel-btn,
        .btn-return {
            background-color: #ff4d4d;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            margin-top: 10px;
        }

        .cancel-btn:hover,
        .btn-return:hover {
            background-color: #ff3333;
        }

        .custom-confirmation-modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1100;
        }

        .confirmation-content {
            background-color: white;
            padding: 30px;
            border-radius: 8px;
            text-align: center;
            max-width: 400px;
            width: 90%;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .confirmation-content h4 {
            margin-bottom: 15px;
            color: #333;
        }

        .confirmation-content p {
            margin-bottom: 20px;
            color: #666;
        }

        .confirmation-actions {
            display: flex;
            justify-content: center;
            gap: 15px;
        }

        .btn-confirm,
        .btn-dismiss {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .btn-confirm {
            background-color: #dc3545;
            color: white;
        }

        .btn-confirm:hover {
            background-color: #c82333;
        }

        .btn-dismiss {
            background-color: #6c757d;
            color: white;
        }

        .btn-dismiss:hover {
            background-color: #545b62;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 600;
        }

        .form-group textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            resize: vertical;
        }
    </style>



    <!-- Breadcrumb Section Begin -->
    <section class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__text">
                        <h4>Order Details</h4>
                        <div class="breadcrumb__links">
                            <a href="/">Home</a>
                            <a href="/userProfile"> Profile</a>
                            <span>Order Details</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Order Details Section Begin -->
    <section class="order-details spad">
        <div class="container">
            <div class="row">
                <div class="col-lg-8">
                    <div class="order-info">
                        <div class="order-info__item">
                            <span>Order ID</span>
                            <span>#<%= order.orderId %></span>
                        </div>
                        <div class="order-info__item">
                            <span>Order Date</span>
                            <span>
                                <%= new Date(order.createdOn).toLocaleDateString() %>
                            </span>
                        </div>
                        <div class="order-info__item">
                            <span>Expected Delivery</span>
                            <span>
                                <%= new Date(order.deliveryDate).toLocaleDateString() %>
                            </span>
                        </div>
                        <div class="order-info__item">
                            <span>Status</span>
                            <span class="order-status status-<%= order.status.toLowerCase() %>">
                                <%= order.status %>
                            </span>
                        </div>
                        <div class="order-info__item">
                            <span>Subtotal</span>
                            <span>₹<%= order.totalPrice %></span>
                        </div>
                        <% if (order.discount) { %>
                            <div class="order-info__item">
                                <span>Discount</span>
                                <span>-₹<%= order.discount %></span>
                            </div>
                            <% } %>
                                <% if (order.couponDiscount) { %>
                                    <div class="order-info__item">
                                        <span>Coupon Offer</span>
                                        <span>-₹<%= order.couponDiscount %></span>
                                    </div>
                                    <% } %>
                                        <div class="order-info__item">
                                            <span>Delivery Charge</span>
                                            <span>₹<%= order.deliveryCharge%></span>
                                        </div>
                                        <div class="order-info__item">
                                            <span>Final Amount</span>
                                            <span>₹<%= order.finalAmount %></span>
                                        </div>
                    </div>

                    <!-- payment details -->

                    <!-- Product Details -->
                    <% if (order.orderedItems && order.orderedItems.length> 0) { %>
                        <% order.orderedItems.forEach(item=> { %>
                            <% if (item && item.product) { %>
                                <div class="product-card">
                                    <div class="product-card__header">
                                        <img src="/uploads/re-image/<%= item.product.productImage[0] %>"
                                            alt="<%= item.product.productName %>" class="product-card__image">
                                        <div class="product-card__details">
                                            <h3 class="product-card__title">
                                                <%= item.product.productName %>
                                            </h3>
                                            <p>Quantity: <%= item.quantity %>
                                            </p>
                                            <p class="product-card__price">₹<%= item.price %>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                <% } %>
                                    <% }); %>
                                        <% } else { %>
                                            <div class="error-message">
                                                <p>No items found in this order</p>
                                            </div>
                                            <% } %>

                                                <!-- Order Timeline -->
                                                <div class="tracking-timeline">
                                                    <% 
                                                    // Define statuses to display
                                                    let statuses = ['Pending', 'Processing', 'Shipped', 'Delivered'];
                                                    
                                                    // Add additional statuses dynamically if applicable
                                                    if (order.status === 'Cancelled') {
                                                        statuses.push('Cancelled');
                                                    } else if (['Return Confirmed', 'Return Requested', 'Returned'].includes(order.status)) {
                                                        statuses.push('Return Requested', 'Return Confirmed', 'Returned');
                                                    }
                                                    %>

                                                        <% statuses.forEach(status=> { %>
                                                            <div
                                                                class="timeline-item <%= order.status === status ? 'active' : '' %>">
                                                                <div class="timeline-date">
                                                                    <%= order.status===status ? new
                                                                        Date(order.updatedOn).toLocaleDateString() : '-'
                                                                        %>
                                                                </div>
                                                                <div class="timeline-status">
                                                                    <%= status %>
                                                                </div>
                                                                <div class="timeline-description">
                                                                    <% if (['Pending', 'Processing' , 'Shipped'
                                                                        , 'Delivered' ].includes(status)) { %>
                                                                        <%= status==='Pending' ? 'Order placed' :
                                                                            status==='Processing'
                                                                            ? 'Order is being processed' :
                                                                            status==='Shipped'
                                                                            ? 'Order has been shipped' :
                                                                            status==='Delivered'
                                                                            ? 'Order has been delivered' : '' %>
                                                                            <% } else if (status==='Cancelled' ) { %>
                                                                                Order has been cancelled
                                                                                <% } else if
                                                                                    (status==='Return Requested' ) { %>
                                                                                    Return request has been initiated
                                                                                    <% } else if
                                                                                        (status==='Return Confirmed' ) {
                                                                                        %>
                                                                                        Return confirmed
                                                                                        <% } else if
                                                                                            (status==='Returned' ) { %>
                                                                                            Order has been returned
                                                                                            <% } else { %>
                                                                                                Unknown status
                                                                                                <% } %>
                                                                </div>
                                                            </div>
                                                            <% }); %>
                                                </div>


                                                <!-- Cancel Order Button -->
                                                <% if (['Pending', 'Processing' ].includes(order.status)) { %>
                                                    <button class="cancel-btn" data-order-id="<%= order._id %>">
                                                        Cancel Order
                                                    </button>
                                                    <% }else if(order.status==='Delivered' ){ %>
                                                        <button class="btn-return"
                                                            data-order-id="<%=order._id%>">Request Return</button>
                                                        <%}%>
                </div>

                <!-- Shipping Address -->
                <div class="col-lg-4">
                    <div class="cart__total">


                        <!-- Add new customer details section -->
                        <h6>Customer Details</h6>
                        <br>
                        <div class="customer-details">
                            <p><strong>Name:</strong>
                                <%= order.userId.name %>
                            </p>
                            <p><strong>Email:</strong>
                                <%= order.userId.email %>
                            </p>
                            <p><strong>Phone:</strong>
                                <%= order.userId.phoneNumber %>
                            </p>
                        </div>

                        <hr class="my-4">


                        <h6>Shipping Address</h6>
                        <br>
                        <div class="shipping-address">
                            <% if (address) { %>
                                <p><strong>
                                        <%= address.addressType %>
                                    </strong></p><br>
                                <p>
                                    <%= address.name %>
                                </p>
                                <p>
                                    <%= address.address %>
                                </p>
                                <p>
                                    <%= address.city %>, <%= address.state %>
                                </p>
                                <p>Pincode :<%= address.pincode %>
                                </p>
                                <p>Phone: <%= address.phone %>
                                </p>
                                <p>Phone: <%= address.altPhone %>
                                </p>
                                <% } else { %>
                                    <p>Shipping address not available</p>
                                    <% } %>
                        </div>

                        <hr class="my-4">
                        <!--payment details  -->
                        <div class="payment-info mt-4">
                            <h6>Payment Details</h6>

                            <div class="payment-info__item">
                                <span>Payment Method : </span>
                                <span>
                                    <%= order.payment.paymentMethod || 'Not specified' %>
                                </span>
                            </div>
                            <div class="payment-info__item">
                                <span>Transaction ID : </span>
                                <span>
                                    <%= order.payment.transactionId || 'Not available' %>
                                </span>
                            </div>
                            <div class="payment-info__item">
                                <span>Payment Status : </span>
                                <span class="payment-status status-<%= order.payment.paymentStatus.toLowerCase() %>">
                                    <%= order.payment.paymentStatus %>
                                </span>
                            </div>

                            <div class="payment-info__item">
                            <input type="hidden" id="orderId" value="<%= order._id %>">
                            <input type="hidden" id="paymentStatus" value="<%= order.paymentStatus %>">

                            <button id="payNowBtn" class="btn btn-primary" style="display: none;">Pay Now</button>
                             </div>

                        </div>

                    </div>

                    <% if (order.status==='Delivered' ) { %>
                        <div class="download-invoice">
                            <a href="/download-invoice?orderId=<%= order._id %>" class="btn btn-primary">
                                Download Invoice
                            </a>
                        </div>
                        <% } %>

                </div>
            </div>
        </div>
        </div>
    </section>

    <div id="alertContainer"></div>

    <script>



        function showCustomAlert(message, type = 'success') {
            const alertContainer = document.getElementById('alertContainer');

            // Create alert element
            const alertEl = document.createElement('div');
            alertEl.className = `custom-alert alert-${type}`;
            alertEl.innerHTML = `
                <div class="alert-content">
                    <div class="alert-icon">
                        ${type === 'success' ? '✓' : '!'} 
                    </div>
                    <div class="alert-message">${message}</div>
                    <button class="alert-close">&times;</button>
                </div>
            `;

            // Add to container
            alertContainer.appendChild(alertEl);

            // Trigger show animation
            setTimeout(() => alertEl.classList.add('show'), 10);

            // Close button functionality
            const closeBtn = alertEl.querySelector('.alert-close');
            closeBtn.addEventListener('click', () => {
                alertEl.classList.remove('show');
                setTimeout(() => alertEl.remove(), 300);
            });

            // Auto-dismiss
            setTimeout(() => {
                if (alertEl.parentNode) {
                    alertEl.classList.remove('show');
                    setTimeout(() => alertEl.remove(), 300);
                }
            }, 3000);
        }

        // Function to create a confirmation modal with return reason
        function createConfirmationModal(title, message, confirmCallback, includeReason = false) {
            const confirmationModal = document.createElement('div');
            confirmationModal.className = 'custom-confirmation-modal';
            confirmationModal.innerHTML = `
                <div class="confirmation-content">
                    <h4>${title}</h4>
                    <p>${message}</p>
                    ${includeReason ? `
                        <div class="form-group">
                            <label for="returnReason">Reason for Return:</label>
                            <textarea id="returnReason" rows="3" placeholder="Enter your reason for return"></textarea>
                        </div>
                    ` : ''}
                    <div class="confirmation-actions">
                        <button class="btn-confirm">Yes</button>
                        <button class="btn-dismiss">No</button>
                    </div>
                </div>
            `;

            // Add modal to body
            document.body.appendChild(confirmationModal);

            // Add event listeners for buttons
            const confirmButton = confirmationModal.querySelector('.btn-confirm');
            const dismissButton = confirmationModal.querySelector('.btn-dismiss');

            confirmButton.addEventListener('click', async () => {
                const returnReason = includeReason ? confirmationModal.querySelector('#returnReason').value : null;
                confirmationModal.remove(); // Remove modal
                await confirmCallback(returnReason); // Execute the confirmation callback with return reason
            });

            dismissButton.addEventListener('click', () => {
                confirmationModal.remove(); // Remove modal
            });
        }

        // Cancel Order Functionality
        document.addEventListener('DOMContentLoaded', () => {
            const cancelBtn = document.querySelector('.cancel-btn');
            if (cancelBtn) {
                cancelBtn.addEventListener('click', () => {
                    createConfirmationModal(
                        'Cancel Order',
                        'Are you sure you want to cancel this order?',
                        async () => {
                            const orderId = cancelBtn.dataset.orderId;
                            try {
                                const response = await fetch('/cancelOrder', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({ orderId })
                                });

                                const data = await response.json();

                                if (data.success) {
                                    showCustomAlert('Order cancelled successfully', 'success');
                                    setTimeout(() => {
                                        window.location.reload();
                                    }, 2000);
                                } else {
                                    showCustomAlert(data.message || 'Failed to cancel order', 'error');
                                }
                            } catch (error) {
                                console.error('Error cancelling order:', error);
                                showCustomAlert('An error occurred while cancelling the order', 'error');
                            }
                        }
                    );
                });
            }

            // Request Return Functionality
            const returnBtn = document.querySelector('.btn-return');
            if (returnBtn) {
                returnBtn.addEventListener('click', () => {
                    createConfirmationModal(
                        'Request Return',
                        'Are you sure you want to request a return for this order?',
                        async (returnReason) => {
                            const orderId = returnBtn.dataset.orderId;
                            try {
                                const response = await fetch('/request-return', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({ orderId, returnReason }) // Include returnReason in the request body
                                });

                                const data = await response.json();

                                if (data.success) {
                                    showCustomAlert('Return request submitted successfully', 'success');
                                    setTimeout(() => {
                                        window.location.reload();
                                    }, 2000);
                                } else {
                                    showCustomAlert(data.message || 'Failed to submit return request', 'error');
                                }
                            } catch (error) {
                                console.error('Error submitting return request:', error);
                                showCustomAlert('An error occurred while submitting the return request', 'error');
                            }
                        },
                        true // Include return reason field
                    );
                });
            }
        });



        
        $(document).ready(function () {
            const orderId = $('#orderId').val(); // Hidden input storing the order ID
            const paymentStatus = $('#paymentStatus').val(); // Hidden input storing payment status

            console.log("payment status :", paymentStatus);
            // Show "Pay Now" button only if payment is pending
            if (paymentStatus === 'Pending') {
                $('#payNowBtn').show();
            }

            // Handle "Pay Now" button click
            $('#payNowBtn').click(function () {
                $.ajax({
                    url: '/create-razorpay-order',
                    method: 'POST',
                    data: JSON.stringify({ orderId: orderId }), // Send order ID to recreate payment order
                    contentType: 'application/json',
                    success: function (response) {
                        if (response.success) {
                            const options = {
                                key: '<%= process.env.RAZORPAY_KEY_ID %>',
                                amount: response.amount,
                                currency: response.currency,
                                name: 'Ease and Style',
                                order_id: response.orderId,
                                handler: function (paymentResponse) {
                                    console.log('Payment Response:', paymentResponse);

                                    // Update order after successful payment
                                    $.ajax({
                                        url: '/update-order-payment',
                                        method: 'POST',
                                        contentType: 'application/json',
                                        data: JSON.stringify({
                                            orderId: orderId,
                                            razorpayPaymentId: paymentResponse.razorpay_payment_id,
                                            razorpayOrderId: paymentResponse.razorpay_order_id,
                                            razorpaySignature: paymentResponse.razorpay_signature,
                                            paymentStatus: 'success'
                                        }),
                                        success: function (res) {
                                            console.log("Update Order Response:", res);
                                            if (res.success) {
                                                showCustomAlert('Payment successful! updating...', 'success');
                                                setTimeout(() => {
                                                    window.location.href = window.location.href;

                                                }, 1500);
                                            } else {
                                                showCustomAlert('Failed to update order!', 'danger');
                                            }
                                        },
                                        error: function () {
                                            showCustomAlert('Error updating order. Please contact support!', 'danger');
                                        }
                                    });
                                },
                                modal: {
                                    ondismiss: function () {
                                        showCustomAlert('Payment was not completed. Try again!', 'warning');
                                    }
                                },
                                theme: {
                                    color: '#000000'
                                }
                            };

                            const rzp = new Razorpay(options);
                            rzp.open();
                        } else {
                            showCustomAlert('Failed to initiate Razorpay payment', 'danger');
                        }
                    },
                    error: function () {
                        showCustomAlert('Error processing payment. Try again!', 'danger');
                    }
                });
            });
        });


    </script>
    <%- include("../../views/partials/user/userFooter") %>