<%- include("../../views/partials/admin/header") %>

<link
  rel="stylesheet"
  href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
/>
<link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
/>
<style>
  body {
    background-color: #f4f6f9;
  }

  .sales-dashboard {
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    padding: 30px;
    margin: 20px;
  }

  .download-btn i {
    margin-right: 8px;
  }

  .dropdown-menu {
    position: absolute;
    top: 100%;
    left: -78px;
    z-index: 1000;
    display: none;
    float: left;
    min-width: 10rem;
    padding: 0.5rem 0;
    margin: 0.125rem 0 0;
    font-size: 1rem;
    color: #212529;
    text-align: left;
    list-style: none;
    background-color: #fff;
    background-clip: padding-box;
    border: 1px solid rgba(0, 0, 0, 0.15);
    border-radius: 0.25rem;
  }

  body {
    background-color: #f4f6f9;
  }

  .sales-dashboard {
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    padding: 30px;
    margin: 20px;
  }

  .sales-summary {
    background: #f3f2ee;
    border-radius: 8px;
    padding: 20px;
    margin-bottom: 20px;
  }

  .summary-card {
    background: white;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 15px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  }

  .filter-section {
    background: #f3f2ee;
    border-radius: 8px;
    padding: 20px;
    margin-bottom: 20px;
  }

  .report-table {
    background: white;
    border-radius: 8px;
    padding: 20px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  }

  .download-btn {
    background-color: #000000;
    color: white;
    border: none;
    padding: 5px 10px;
    margin: 5px 5px;
  }

  .download-btn:hover {
    background-color: #414141;
  }

  .btn.btn-primary {
    font-size: 11px;
    font-weight: 500;
    padding: 10px 20px;
    color: #ffffff;
    border: none;
    background-color: #9a1717;
    border-radius: 0px;
  }

  .loading-spinner {
    display: none;
    text-align: center;
    padding: 20px;
  }

  .report-table canvas {
    height: 400px !important;
    width: 100% !important;
  }

  @media (max-width: 768px) {
    .report-table canvas {
      min-height: 300px;
    }
  }
</style>

<section class="content-main">
  <div class="container-fluid">
    <div class="sales-dashboard">
      <h4 class="content-title mb-4">Sales Dashboard</h4>

      <!-- Sales Summary -->
      <div class="sales-summary row">
        <div class="col-md-6">
          <div class="summary-card">
            <h6>Total Sales</h6>
            <h3 id="totalSales">₹0</h3>
          </div>
        </div>
        <div class="col-md-6">
          <div class="summary-card">
            <h6>Total Orders</h6>
            <h3 id="totalOrders">0</h3>
          </div>
        </div>
      </div>
      <div class="sales-summary row">
        <div class="col-md-4">
          <div class="summary-card">
            <h6>Total Discount</h6>
            <h3 id="totalDiscount">₹0</h3>
          </div>
        </div>
        <div class="col-md-4">
          <div class="summary-card">
            <h6>Active Coupons</h6>
            <h3 id="activeCoupons">0</h3>
          </div>
        </div>
        <div class="col-md-4">
          <div class="summary-card">
            <h6>Inactive Coupons</h6>
            <h3 id="inactiveCoupons">0</h3>
          </div>
        </div>
      </div>

      <!-- Filter Section -->
      <div class="filter-section">
        <div class="row">
          <div class="col-md-3">
            <label>Report Type</label>
            <select id="reportType" class="form-control">
              <option value="daily">Daily</option>
              <option value="weekly">Weekly</option>
              <option value="monthly">Monthly</option>
              <option value="yearly">Yearly</option>
              <option value="custom">Custom Range</option>
            </select>
          </div>
          <div class="col-md-3" id="customDateRange" style="display: none">
            <label>Start Date</label>
            <input type="date" class="form-control" id="startDate" />
          </div>
          <div class="col-md-3" id="customEndDateRange" style="display: none">
            <label>End Date</label>
            <input type="date" class="form-control" id="endDate" />
          </div>
          <div class="col-md-3 align-self-end">
            <button class="btn btn-primary" id="generateReport">
              Generate Report
            </button>
          </div>
        </div>
      </div>

      <!-- Chart Section -->
      <div class="report-table mb-4">
        <div class="row">
          <div class="col-12">
            <h5 class="mb-3">Sales Trend</h5>
            <canvas id="salesChart" style="width: 100%; height: 400px"></canvas>
          </div>
        </div>
      </div>

      <!-- Loading Spinner -->
      <div id="loadingSpinner" class="loading-spinner">
        <div class="spinner-border text-primary" role="status">
          <span class="sr-only">Loading...</span>
        </div>
      </div>

      <!-- Report Table -->
      <div class="report-table">
        <table class="table table-striped" id="salesReportTable">
          <thead>
            <tr>
              <th>Date</th>
              <th>No. of Orders</th>
              <th>Total Sales</th>
              <th>Discounts</th>

              <th>Net Sales</th>
              <th>Total Items Sold</th>
            </tr>
          </thead>
          <tbody id="reportBody">
            <!-- Dynamic report data will be inserted here -->
          </tbody>
        </table>
      </div>

      <!-- Add this after the report table section -->
      <div class="row mt-4">
        <!-- Top Products -->
        <div class="col-md-4">
          <div class="report-table">
            <h5 class="mb-3">Best Selling Products</h5>
            <table class="table table-sm table-hover">
              <thead>
                <tr>
                  <th>Product</th>
                  <th>Sold</th>
                  <th>Revenue</th>
                </tr>
              </thead>
              <tbody id="topProductsBody">
                <!-- Data will be inserted here -->
              </tbody>
            </table>
          </div>
        </div>

        <!-- Top Categories -->
        <div class="col-md-4">
          <div class="report-table">
            <h5 class="mb-3">Best Selling Categories</h5>
            <table class="table table-sm table-hover">
              <thead>
                <tr>
                  <th>Category</th>
                  <th>Sold</th>
                  <th>Revenue</th>
                </tr>
              </thead>
              <tbody id="topCategoriesBody">
                <!-- Data will be inserted here -->
              </tbody>
            </table>
          </div>
        </div>

        <!-- Top Brands -->
        <div class="col-md-4">
          <div class="report-table">
            <h5 class="mb-3">Best Selling Brands</h5>
            <table class="table table-sm table-hover">
              <thead>
                <tr>
                  <th>Brand</th>
                  <th>Sold</th>
                  <th>Revenue</th>
                </tr>
              </thead>
              <tbody id="topBrandsBody">
                <!-- Data will be inserted here -->
              </tbody>
            </table>
          </div>
        </div>
      </div>
      <!-- Download Buttons -->
      <div class="text-center mt-3">
        <button class="download-btn" id="downloadPDF">
          <i class="fas fa-file-pdf"></i> Download PDF
        </button>
        <button class="download-btn" id="downloadExcel">
          <i class="fas fa-file-excel"></i> Download Excel
        </button>
      </div>
    </div>
  </div>
</section>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="dashboard.js"></script>

<script>
  // Initialize chart variable
  let salesChart;

  // Function to initialize chart
  function initializeChart() {
    const ctx = document.getElementById("salesChart").getContext("2d");
    salesChart = new Chart(ctx, {
      type: "bar",
      data: {
        labels: [],
        datasets: [
          {
            label: "Total Sales",
            backgroundColor: "rgba(11, 11, 11, 0.9)",
            borderColor: "#3f3f40",
            borderWidth: 1,
            data: [],
          },
          {
            label: "Net Sales",
            backgroundColor: "rgba(154, 23, 23, 1)",
            borderColor: "#700009",
            borderWidth: 1,
            data: [],
          },
          {
            label: "Discounts",
            backgroundColor: "rgba(255, 198, 88, 0.7)",
            borderColor: "#ffc658",
            borderWidth: 1,
            data: [],
          },
        ],
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        interaction: {
          intersect: false,
          mode: "index",
        },
        plugins: {
          tooltip: {
            enabled: true,
            mode: "index",
            intersect: false,
            callbacks: {
              label: function (context) {
                let label = context.dataset.label || "";
                let value = context.parsed.y;

                if (value !== null) {
                  value = value.toFixed(2);
                  label +=
                    ": ₹" +
                    parseFloat(value).toLocaleString("en-IN", {
                      minimumFractionDigits: 2,
                      maximumFractionDigits: 2,
                    });
                }
                return label;
              },
            },
          },
          legend: {
            position: "top",
            labels: {
              usePointStyle: true,
              padding: 20,
            },
          },
        },
        scales: {
          x: {
            grid: {
              display: false,
            },
          },
          y: {
            beginAtZero: true,
            ticks: {
              callback: function (value) {
                return (
                  "₹" +
                  value.toLocaleString("en-IN", {
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2,
                  })
                );
              },
            },
            grid: {
              borderDash: [2, 4],
            },
          },
        },
        barPercentage: 0.8,
        categoryPercentage: 0.9,
      },
    });
  }

  // Function to update chart data
  function updateChart(data) {
    if (!salesChart) {
      initializeChart();
    }

    const labels = [];
    const totalSales = [];
    const netSales = [];
    const discounts = [];

    if (Array.isArray(data.reports)) {
      data.reports.forEach((report) => {
        labels.push(report.date);

        // Ensure all values are properly parsed as numbers
        const totalSaleValue = parseFloat(
          (report.totalSales + report.totalDiscount).toFixed(2)
        );
        const netSaleValue = parseFloat(report.totalSales.toFixed(2));
        const discountValue = parseFloat(report.totalDiscount.toFixed(2));

        totalSales.push(totalSaleValue);
        netSales.push(netSaleValue);
        discounts.push(discountValue); // Now pushing just the number value
      });
    }

    salesChart.data.labels = labels;
    salesChart.data.datasets[0].data = totalSales;
    salesChart.data.datasets[1].data = netSales;
    salesChart.data.datasets[2].data = discounts;

    salesChart.update();
  }

  // Modified loadInitialData function
  const loadInitialData = async () => {
    try {
      const response = await fetch("/admin/initial-sales-data");
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      const data = await response.json();
      updateDashboardData(data);
      updateReportTable(data.today);
      updateChart(data.today); // Add chart update
    } catch (error) {
      console.error("Error loading initial data:", error);
      alert("Failed to load dashboard data");
    }
  };

  // Function to update dashboard summary cards
  const updateDashboardData = (data) => {
    document.getElementById("totalSales").textContent =
      `₹${data.overall.totalSales.toFixed(2)}`;
    document.getElementById("totalOrders").textContent =
      data.overall.totalOrders;
    document.getElementById("totalDiscount").textContent =
      `₹${data.overall.totalDiscount.toFixed(2)}`;
    document.getElementById("activeCoupons").textContent = data.coupons.active;
    document.getElementById("inactiveCoupons").textContent =
      data.coupons.inactive;

    // Update top products
    const topProductsBody = document.getElementById("topProductsBody");
    topProductsBody.innerHTML = data.topProducts
      .map(
        (product) => `
        <tr>
            <td>${product.name}</td>
            <td>${product.quantity.toLocaleString()}</td>
            <td>₹${product.revenue.toFixed(2)}</td>
        </tr>
    `
      )
      .join("");

    // Update top categories
    const topCategoriesBody = document.getElementById("topCategoriesBody");
    topCategoriesBody.innerHTML = data.topCategories
      .map(
        (category) => `
        <tr>
            <td>${category.name}</td>
            <td>${category.quantity.toLocaleString()}</td>
            <td>₹${category.revenue.toFixed(2)}</td>
        </tr>
    `
      )
      .join("");

    // Update top brands
    const topBrandsBody = document.getElementById("topBrandsBody");
    topBrandsBody.innerHTML = data.topBrands
      .map(
        (brand) => `
        <tr>
            <td>${brand.name}</td>
            <td>${brand.quantity.toLocaleString()}</td>
            <td>₹${brand.revenue.toFixed(2)}</td>
        </tr>
    `
      )
      .join("");
  };

  // Modified updateReportTable function
  const updateReportTable = (data) => {
    const reportBody = document.getElementById("reportBody");
    reportBody.innerHTML = "";

    if (Array.isArray(data.reports)) {
      data.reports.forEach((report) => {
        reportBody.innerHTML += `
                <tr>
                    <td>${report.date}</td>
                    <td>${report.orderCount}</td>
                    <td>₹${(report.totalSales + report.totalDiscount).toFixed(2)}</td>
                    <td>₹${report.totalDiscount.toFixed(2)}</td>
                    <td>₹${report.totalSales.toFixed(2)}</td>
                    <td>${report.totalItems}</td>
                </tr>
            `;
      });
    }
  };

  // Modified event listeners
  document.addEventListener("DOMContentLoaded", () => {
    // Load initial data when page loads
    loadInitialData();

    // Report type change handler
    document
      .getElementById("reportType")
      .addEventListener("change", function () {
        const customDateRange = document.getElementById("customDateRange");
        const customEndDateRange =
          document.getElementById("customEndDateRange");
        const isCustom = this.value === "custom";
        customDateRange.style.display = isCustom ? "block" : "none";
        customEndDateRange.style.display = isCustom ? "block" : "none";
      });

    // Modified generate report handler to include chart update
    document
      .getElementById("generateReport")
      .addEventListener("click", async () => {
        const reportType = document.getElementById("reportType").value;
        const startDate = document.getElementById("startDate").value;
        const endDate = document.getElementById("endDate").value;

        document.getElementById("loadingSpinner").style.display = "block";

        try {
          const response = await fetch("/admin/generate-report", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ reportType, startDate, endDate }),
          });

          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }

          const data = await response.json();
          updateReportTable(data);
          updateChart(data); // Add chart update
        } catch (error) {
          console.error("Error generating report:", error);
          alert("Failed to generate report. Please try again.");
        } finally {
          document.getElementById("loadingSpinner").style.display = "none";
        }
      });

    // Download handlers
    document.getElementById("downloadPDF").addEventListener("click", () => {
      const reportType = document.getElementById("reportType").value;
      const startDate = document.getElementById("startDate").value;
      const endDate = document.getElementById("endDate").value;

      window.location.href = `/admin/download-pdf?reportType=${reportType}&startDate=${startDate}&endDate=${endDate}`;
    });

    document.getElementById("downloadExcel").addEventListener("click", () => {
      const reportType = document.getElementById("reportType").value;
      const startDate = document.getElementById("startDate").value;
      const endDate = document.getElementById("endDate").value;

      window.location.href = `/admin/download-excel?reportType=${reportType}&startDate=${startDate}&endDate=${endDate}`;
    });
  });
</script>

<%- include("../../views/partials/admin/footer") %>
